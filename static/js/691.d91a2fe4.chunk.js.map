{"version":3,"file":"static/js/691.d91a2fe4.chunk.js","mappings":"qNAEaA,EAAOC,EAAAA,EAAAA,GAAH,wIAQJC,EAAWD,EAAAA,EAAAA,GAAH,+D,SCLRE,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,GACCA,EAAMG,KAAI,SAAAC,GAAC,OACT,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEE,IAAMC,MAAO,CAAEC,KAAMP,GAA5C,UACE,SAACH,EAAD,UAAWM,EAAEK,OAASL,EAAEM,QADmCN,EAAEE,GADtD,KAOlB,C,mMCfDK,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAE5B,IAAMC,EAAS,mCAAG,8FACTF,EAAAA,GAAAA,IAAU,qBADD,uCACuBG,MADvB,2CAAH,qDAITC,EAAS,mCAAG,WAAMC,GAAN,iFACTL,EAAAA,GAAAA,IAAA,8BAAiCK,IADxB,uCACkCF,MADlC,2CAAH,sDAITG,EAAe,mCAAG,WAAMX,GAAN,iFACfK,EAAAA,GAAAA,IAAA,iBAAoBL,IADL,uCACYQ,MADZ,2CAAH,sDAIfI,EAAe,mCAAG,WAAMZ,GAAN,iFACfK,EAAAA,GAAAA,IAAA,iBAAoBL,EAApB,aADe,uCACoBQ,MADpB,2CAAH,sDAIfK,EAAe,mCAAG,WAAMb,GAAN,iFACfK,EAAAA,GAAAA,IAAA,iBAAoBL,EAApB,aADe,uCACoBQ,MADpB,2CAAH,qD,iMCjBfM,EAAOvB,EAAAA,EAAAA,KAAH,sKASJwB,GAAQxB,EAAAA,EAAAA,GAAOyB,EAAAA,EAAPzB,CAAH,8DAKL0B,GAAS1B,EAAAA,EAAAA,GAAO2B,EAAAA,EAAP3B,CAAH,wG,SC2CnB,EArDe,WACb,OAA0B4B,EAAAA,EAAAA,YAA1B,eAAOT,EAAP,KAAcU,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOzB,EAAP,KAAc2B,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAaG,IAAI,QAAS,CAAC,IACdC,EADa,mCAC5B,qGACsBlB,EAAAA,EAAAA,IAAUc,EAAaG,IAAI,SADjD,OACQlB,EADR,OAC2DoB,QACzDP,EAASb,GAFX,2CAD4B,qDAK5BmB,GACD,CAEF,GAAE,IAEH,IAAME,EAAQ,mCAAG,WAAM/B,GAAN,4EACfA,EAAEgC,iBAEY,MADNC,EAAUjC,EAAEkC,OAAOC,SAASC,OAA5BH,QACYA,IAAUrB,EAHf,kEAMKD,EAAAA,EAAAA,IAAUX,EAAEkC,OAAOC,SAASC,OAAOH,OANxC,OAMTvB,EANS,OAMgDoB,QAC/DP,EAASb,GACTY,EAASW,GARM,2CAAH,sDAed,OACE,4BACE,UAACjB,EAAD,CAAMe,SAAUA,EAAhB,WACE,SAACd,EAAD,CACEf,GAAG,iBACHmC,MAAM,UACNC,QAAQ,WACRC,KAAK,QACLjC,KAAK,SACL2B,MAAOR,EAAaG,IAAI,SAAW,GACnCY,SAdS,SAAAxC,GACf0B,EAAgB,CAAEpB,KAAMN,EAAEkC,OAAOD,OAClC,KAcK,SAACd,EAAD,CAAQsB,KAAK,SAASH,QAAQ,YAA9B,2BAKF,SAAC3C,EAAA,EAAD,CAAWC,MAAOA,MAGvB,C","sources":["components/FilmsList/FilmsList.styled.jsx","components/FilmsList/FilmsList.jsx","fetchAPI.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n  /* list-style: none; */\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0 0 30px;\n  gap: 6px;\n`;\n\nexport const ListItem = styled.li`\n  &:hover {\n    color: #1e2640;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem } from './FilmsList.styled';\n\nexport const FilmsList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {films &&\n        films.map(e => (\n          <Link to={`/movies/${e.id}`} state={{ from: location }} key={e.id}>\n            <ListItem>{e.title || e.name}</ListItem>\n          </Link>\n        ))}\n    </List>\n  );\n};\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '22ffd9c27f352ff768d0db984597ea70' };\n\nexport const getTrends = async () => {\n  return (await axios.get('/trending/all/day')).data;\n};\n\nexport const getSearch = async query => {\n  return (await axios.get(`/search/movie?query=${query}`)).data;\n};\n\nexport const getMovieDetails = async id => {\n  return (await axios.get(`/movie/${id}`)).data;\n};\n\nexport const getMovieCredits = async id => {\n  return (await axios.get(`/movie/${id}/credits`)).data;\n};\n\nexport const getMovieReviews = async id => {\n  return (await axios.get(`/movie/${id}/reviews`)).data;\n};\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  margin: 10px;\n  border-radius: 10px;\n  background-color: rgb(229, 229, 229);\n`;\n\nexport const Input = styled(TextField)`\n  width: 80%;\n  margin-right: 10px;\n`;\n\nexport const Submit = styled(Button)`\n  background-color: #4e5d99;\n  &:hover {\n    background-color: #879dfb;\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport { getSearch } from 'fetchAPI';\nimport { FilmsList } from 'components/FilmsList/FilmsList';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Form, Input, Submit } from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState();\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (searchParams.get('name')) {\n      async function getData() {\n        const data = (await getSearch(searchParams.get('name'))).results;\n        setFilms(data);\n      }\n      getData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const { value } = e.target.elements.search;\n    if (value === '' || value === query) {\n      return;\n    }\n    const data = (await getSearch(e.target.elements.search.value)).results;\n    setFilms(data);\n    setQuery(value);\n  };\n\n  const onChange = e => {\n    setSearchParams({ name: e.target.value });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <Input\n          id=\"outlined-basic\"\n          label=\"Film...\"\n          variant=\"outlined\"\n          size=\"small\"\n          name=\"search\"\n          value={searchParams.get('name') || ''}\n          onChange={onChange}\n        />\n        <Submit type=\"submit\" variant=\"contained\">\n          Contained\n        </Submit>\n      </Form>\n\n      <FilmsList films={films} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","ListItem","FilmsList","films","location","useLocation","map","e","to","id","state","from","title","name","axios","api_key","getTrends","data","getSearch","query","getMovieDetails","getMovieCredits","getMovieReviews","Form","Input","TextField","Submit","Button","useState","setQuery","setFilms","useSearchParams","searchParams","setSearchParams","useEffect","get","getData","results","onSubmit","preventDefault","value","target","elements","search","label","variant","size","onChange","type"],"sourceRoot":""}