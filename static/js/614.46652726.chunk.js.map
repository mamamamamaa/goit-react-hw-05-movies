{"version":3,"file":"static/js/614.46652726.chunk.js","mappings":"kRAEaA,EAAgBC,EAAAA,EAAAA,GAAH,sGAQbC,EAAWD,EAAAA,EAAAA,GAAH,+C,SCuBrB,EA5BkB,WAChB,OAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,0FACnBJ,EADmB,UACCK,EAAAA,EAAAA,IAAgBJ,GADjB,0BACsBK,QADtB,6EAAH,qDAElBF,GACD,GAAE,CAACH,KAGF,8BACGF,EAAUQ,OAAS,GAClB,SAACZ,EAAD,UACGI,EAAUS,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACb,2BACE,UAACb,EAAD,wBAAqBY,MACrB,6BAAKC,EAAL,SAFOT,EADI,OAQjB,yDAIP,C,mMC7BDU,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAE5B,IAAMC,EAAS,mCAAG,8FACTF,EAAAA,GAAAA,IAAU,qBADD,uCACuBG,MADvB,2CAAH,qDAITC,EAAS,mCAAG,WAAMC,GAAN,iFACTL,EAAAA,GAAAA,IAAA,8BAAiCK,IADxB,uCACkCF,MADlC,2CAAH,sDAITG,EAAe,mCAAG,WAAMhB,GAAN,iFACfU,EAAAA,GAAAA,IAAA,iBAAoBV,IADL,uCACYa,MADZ,2CAAH,sDAIfI,EAAe,mCAAG,WAAMjB,GAAN,iFACfU,EAAAA,GAAAA,IAAA,iBAAoBV,EAApB,aADe,uCACoBa,MADpB,2CAAH,sDAIfT,EAAe,mCAAG,WAAMJ,GAAN,iFACfU,EAAAA,GAAAA,IAAA,iBAAoBV,EAApB,aADe,uCACoBa,MADpB,2CAAH,qD","sources":["components/Reviewers/Reviewers.styled.jsx","components/Reviewers/Reviewers.jsx","fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewersList = styled.ol`\n  padding: 20px;\n\n  & li:not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Reviewer = styled.h3`\n  margin-bottom: 7px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'fetchAPI';\nimport { useParams } from 'react-router-dom';\nimport { ReviewersList, Reviewer } from './Reviewers.styled';\n\nconst Reviewers = () => {\n  const [reviewers, setReviewers] = useState({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getReviewers = async () =>\n      setReviewers((await getMovieReviews(id)).results);\n    getReviewers();\n  }, [id]);\n\n  return (\n    <>\n      {reviewers.length > 0 ? (\n        <ReviewersList>\n          {reviewers.map(({ id, author, content }) => (\n            <li key={id}>\n              <Reviewer>Reviewer: {author}</Reviewer>\n              <p>\"{content}\"</p>\n            </li>\n          ))}\n        </ReviewersList>\n      ) : (\n        <p>Sorry, we have no results!!!</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviewers;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '22ffd9c27f352ff768d0db984597ea70' };\n\nexport const getTrends = async () => {\n  return (await axios.get('/trending/all/day')).data;\n};\n\nexport const getSearch = async query => {\n  return (await axios.get(`/search/movie?query=${query}`)).data;\n};\n\nexport const getMovieDetails = async id => {\n  return (await axios.get(`/movie/${id}`)).data;\n};\n\nexport const getMovieCredits = async id => {\n  return (await axios.get(`/movie/${id}/credits`)).data;\n};\n\nexport const getMovieReviews = async id => {\n  return (await axios.get(`/movie/${id}/reviews`)).data;\n};\n"],"names":["ReviewersList","styled","Reviewer","useState","reviewers","setReviewers","id","useParams","useEffect","getReviewers","getMovieReviews","results","length","map","author","content","axios","api_key","getTrends","data","getSearch","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}