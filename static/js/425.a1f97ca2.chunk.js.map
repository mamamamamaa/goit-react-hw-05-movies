{"version":3,"file":"static/js/425.a1f97ca2.chunk.js","mappings":"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","sources":["fetchAPI.js","components/Detales/Detales.styled.jsx","components/Detales/Detales.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '22ffd9c27f352ff768d0db984597ea70' };\n\nexport const getTrends = async () => {\n  return (await axios.get('/trending/all/day')).data;\n};\n\nexport const getSearch = async query => {\n  return (await axios.get(`/search/movie?query=${query}`)).data;\n};\n\nexport const getMovieDetails = async id => {\n  return (await axios.get(`/movie/${id}`)).data;\n};\n\nexport const getMovieCredits = async id => {\n  return (await axios.get(`/movie/${id}/credits`)).data;\n};\n\nexport const getMovieReviews = async id => {\n  return (await axios.get(`/movie/${id}/reviews`)).data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetalesConrainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  gap: 20px;\n`;\n\nexport const GoBack = styled(NavLink)`\n  position: relative;\n  left: -20px;\n  display: inline-block;\n  color: gray;\n  background-color: white;\n  align-items: center;\n  gap: 10px;\n\n  margin: 15px 0;\n  padding: 7px;\n\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n\n  text-decoration: none;\n`;\n\nexport const Decription = styled.div``;\n\nexport const FilmTitle = styled.h1`\n  font-size: 30px;\n  margin-bottom: 15px;\n`;\n\nexport const UserScore = styled.span`\n  font-size: 20px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin: 15px 0 5px 0;\n`;\n\nexport const ExtraDataList = styled.ul`\n  list-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 40px;\n  padding-bottom: 20px;\n\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ExtraDataItem = styled.li`\n  background-color: white;\n  padding: 15px 20px;\n  & a {\n    color: grey;\n  }\n  &:nth-of-type(1) {\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n    border-right: 1px solid grey;\n    padding-right: 30px;\n    padding-left: 30px;\n  }\n  &:nth-of-type(2) {\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n  }\n`;\n\nexport const ExtraDataLink = styled(NavLink)`\n  &.active {\n    font-weight: 700;\n    color: #4e5d99;\n  }\n  &:hover {\n    color: #4e5d99;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { Trends } from 'pages/Home/Home.styled';\nimport { useLocation, Outlet } from 'react-router-dom';\n\nimport {\n  DetalesConrainer,\n  GoBack,\n  FilmTitle,\n  Decription,\n  UserScore,\n  SubTitle,\n  ExtraDataList,\n  ExtraDataItem,\n  ExtraDataLink,\n} from './Detales.styled';\n\nimport { BsArrow90DegLeft } from 'react-icons/bs';\n\nexport const Detales = ({ data }) => {\n  const location = useLocation();\n\n  const {\n    poster_path,\n    original_title,\n    original_name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  const getYear = date => {\n    return date.slice(0, 4);\n  };\n\n  const getGenres = genres => {\n    const genresName = genres.map(genre => genre.name);\n    return genresName.join(', ');\n  };\n\n  const cameBack = location.state?.from ?? '/';\n  return (\n    <div>\n      <GoBack to={cameBack}>\n        <BsArrow90DegLeft size={15} color={'gray'} /> Go back\n      </GoBack>\n      <DetalesConrainer>\n        <img src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt=\"\" />\n        <Decription>\n          <FilmTitle>\n            {original_title || original_name}\n            {` (${getYear(release_date)})`}\n          </FilmTitle>\n          <UserScore>User score: {parseInt(vote_average * 10)}%</UserScore>\n          <SubTitle>Overview</SubTitle>\n          <span>{overview}</span>\n          <SubTitle>Genres</SubTitle>\n          <span>{genres.length > 0 && getGenres(genres)}</span>\n        </Decription>\n      </DetalesConrainer>\n      <ExtraDataList>\n        <ExtraDataItem>\n          <ExtraDataLink to=\"cast\" state={{ from: cameBack }}>\n            Cast\n          </ExtraDataLink>\n        </ExtraDataItem>\n        <ExtraDataItem>\n          <ExtraDataLink to=\"reviews\" state={{ from: cameBack }}>\n            Reviews\n          </ExtraDataLink>\n        </ExtraDataItem>\n      </ExtraDataList>\n      <Suspense fallback={<Trends>Loading...</Trends>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nDetales.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string,\n    original_name: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'fetchAPI';\nimport { Detales } from 'components/Detales/Detales';\n\nconst MovieDetails = () => {\n  const [detales, setDetales] = useState({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getDetales = async () => setDetales(await getMovieDetails(id));\n    getDetales();\n  }, [id]);\n\n  return Object.keys(detales).length !== 0 && <Detales data={detales} />;\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getTrends","data","getSearch","query","getMovieDetails","id","getMovieCredits","getMovieReviews","DetalesConrainer","styled","GoBack","NavLink","Decription","FilmTitle","UserScore","SubTitle","ExtraDataList","ExtraDataItem","ExtraDataLink","Detales","date","location","useLocation","poster_path","original_title","original_name","release_date","vote_average","overview","genres","cameBack","state","from","to","size","color","src","alt","slice","parseInt","length","map","genre","name","join","getGenres","Suspense","fallback","useState","detales","setDetales","useParams","useEffect","getDetales","Object","keys"],"sourceRoot":""}